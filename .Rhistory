rnorm
availale.packages()
available.packages()
available.packages()
install.packages ("slidify")
install.packages("ggplot2")
library(ggplot2)
search()
ls
var a -> {0,0}
array
clear
cls
clean
cd .
library(swirl)
!(0 >= -1)
7 != 8
!FALSE
(TRUE != FALSE) == !(6 == 7)
`6 != 10 &&
| FALSE && 1 >= 2`
6 != 10 &&
| FALSE && 1 >= 2
6 != 10 && | FALSE && 1 >= 2
TRUE || 5 < 9.3 || FALSE
6 != 10 && FALSE && 1 >= 2
99.99 > 100 || 45 < 7.3 || 4 != 4.0
TRUE && FALSE || 9 >= 4 && 3 < 6
TRUE && 62 < 62 && 44 >= 44
FALSE || TRUE && FALSE
!(8 > 4) ||  5 == 5.0 && 7.8 >= 7.79
FALSE || TRUE && 6 != 4 || 9 > 4
FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
6 >= -9 && !(6 > 7) && !(!TRUE)
!isTRUE(4 < 3)
!isTRUE(8 != 5)
isTRUE(!TRUE)
!TrUE
!TRUE
identical(5 > 4, 3 < 3.1)
xor(!isTRUE(TRUE), 6 > -1)
xor(!!TRUE, !!FALSE)
xor(4 >= 9, 8 != 8.0)
any(ints == 2.5)
all(c(TRUE, FALSE, TRUE))
mean
c()
while()
while
c
c
x <- ((1,2),(3,4))
x <- c((1,2),(3,4))
means
columnmean <- function(j) {
nc <- ncol(j)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(j[, i])
}
means
}
sample <- c((1,2),(3,4),(5,6))
sample <- matrix(2, 3)
sample <- c((1,2),(3,4),(5,6))
for(i in 1:2){for(j in 1:3){sample[i,j] <- i+j}}
sample <- matrix(2, 3)
for(i in 1:2){for(j in 1:3){sample[i,j] <- i+j}}
for(i in 1:2){for(j in 1:3){sample[i,j] <- sum(i,j)}}
sample <- data.frame(c(1,2),c(3,4),c(5,6))
sample
columnmean(sample)
columnmean <- function(j) {
nc <- ncol(j)
#means <- numeric(nc)
#for(i in 1:nc) {
#  means[i] <- mean(j[, i])
#}
#means
}
columnmean(sample)
sample
columnmean(sample)
columnmean <- function(j) {
nc <- ncol(j)
nc
#means <- numeric(nc)
#for(i in 1:nc) {
#  means[i] <- mean(j[, i])
#}
#means
}
columnmean(sample)
columnmean <- function(j) {
nc <- ncol(j)
means <- numeric(nc)
#for(i in 1:nc) {
#  means[i] <- mean(j[, i])
#}
means
}
columnmean(sample)
columnmean <- function(j) {
nc <- ncol(j)
means <- numeric(nc)
for(i in 1:1) {
means[i] <- mean(j[, i])
}
means
}
columnmean(sample)
columnmean <- function(j) {
nc <- ncol(j)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(j[, i])
}
#means
}
columnmean(sample)
columnmean <- function(j) {
nc <- ncol(j)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(j[, i])
}
means
}
columnmean(sample)
remainder <- function(num, divisor = 2) {
num %% divisor
}
remainder(7, 4)
remainder(10, 2)
remainder(7)
remainder <- function(num, divisor) {
num %% divisor
}
remainder(7)
remainder <- function(num, divisor = 2) {
num %% divisor
}
remainder(7)
remainder(divisor = 2, num = 7)
remainder(divisor = 2, num = 10)
remainder(n = 10, d = 2)
remainder(d = 3, n = 10)
remainder(d = 3, n)
remainder(d = 3, 10)
x <- as.Date("2015-11-14")
x
unclass(x)
cube <-  function(x, n) {
x^3
}
cube(3)
cube(n = 3)
x <- 1:10
x
if(x > 5){
x <- 0
}
x <- 2
if(x > 5){
x <- 0
}
x
x <- 1:10
if(x[6] > 5){
x <- 0
}
x
if(x[6] > 5){
x[6] <- 0
}
if(x[6] > 5){
x <- 0
}
x <- 1:10
if(x[6] > 5){
x <- 0
}
x
x <- 1:10
<- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
getwd()
